openapi: 3.0.1
info:
  title: Tanzu App - OpenAPI 3.0
  description: This is a sample Spring Boot RESTful service using springdoc-openapi
    and OpenAPI 3.
servers:
- url: http://tap.westeurope.cloudapp.azure.com
  description: Generated server url
paths:
  /api/configs:
    get:
      tags:
      - config-entity-controller
      description: get-config
      operationId: getCollectionResource-config-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property(,asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelConfig'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelConfig'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - config-entity-controller
      description: create-config
      operationId: postCollectionResource-config-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelConfig'
  /api/configs/{id}:
    get:
      tags:
      - config-entity-controller
      description: get-config
      operationId: getItemResource-config-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelConfig'
        "404":
          description: Not Found
    put:
      tags:
      - config-entity-controller
      description: update-config
      operationId: putItemResource-config-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelConfig'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelConfig'
        "204":
          description: No Content
    delete:
      tags:
      - config-entity-controller
      description: delete-config
      operationId: deleteItemResource-config-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - config-entity-controller
      description: patch-config
      operationId: patchItemResource-config-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelConfig'
        "204":
          description: No Content
  /api/helloes:
    get:
      tags:
      - hello-entity-controller
      description: get-hello
      operationId: getCollectionResource-hello-get_1
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property(,asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelHello'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelHello'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
      - hello-entity-controller
      description: create-hello
      operationId: postCollectionResource-hello-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HelloRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelHello'
  /api/helloes/search/findAllEagered:
    get:
      tags:
      - hello-search-controller
      operationId: executeSearch-hello-get
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelHello'
        "404":
          description: Not Found
  /api/helloes/{id}:
    get:
      tags:
      - hello-entity-controller
      description: get-hello
      operationId: getItemResource-hello-get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelHello'
        "404":
          description: Not Found
    put:
      tags:
      - hello-entity-controller
      description: update-hello
      operationId: putItemResource-hello-put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HelloRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelHello'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelHello'
        "204":
          description: No Content
    delete:
      tags:
      - hello-entity-controller
      description: delete-hello
      operationId: deleteItemResource-hello-delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
      - hello-entity-controller
      description: patch-hello
      operationId: patchItemResource-hello-patch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HelloRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelHello'
        "204":
          description: No Content
  /api/profile:
    get:
      tags:
      - profile-controller
      operationId: listAllFormsOfMetadata_1
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RepresentationModelObject'
  /api/profile/configs:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_1
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /api/profile/helloes:
    get:
      tags:
      - profile-controller
      operationId: descriptor_1_1_2
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /prime/{num}:
    get:
      tags:
      - prime-controller
      operationId: prime
      parameters:
      - name: num
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: string
components:
  schemas:
    AbstractJsonSchemaPropertyObject:
      type: object
      properties:
        title:
          type: string
        readOnly:
          type: boolean
    Item:
      type: object
      properties:
        type:
          type: string
        properties:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AbstractJsonSchemaPropertyObject'
        requiredProperties:
          type: array
          items:
            type: string
    JsonSchema:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        properties:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AbstractJsonSchemaPropertyObject'
        requiredProperties:
          type: array
          items:
            type: string
        definitions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Item'
        type:
          type: string
        $schema:
          type: string
    Links:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
    RepresentationModelObject:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelConfig:
      type: object
      properties:
        val:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
    PageMetadata:
      type: object
      properties:
        size:
          type: integer
          format: int64
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int64
        number:
          type: integer
          format: int64
    PagedModelEntityModelConfig:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            configs:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelConfig'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    EntityModelHello:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelHello:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            helloes:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelHello'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    CollectionModelEntityModelHello:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            helloes:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelHello'
        _links:
          $ref: '#/components/schemas/Links'
    ConfigRequestBody:
      type: object
      properties:
        name:
          type: string
        val:
          type: string
    HelloRequestBody:
      type: object
      properties:
        a:
          type: string
        b:
          type: string
    Link:
      type: object
      properties:
        href:
          type: string
        hreflang:
          type: string
        title:
          type: string
        type:
          type: string
        deprecation:
          type: string
        profile:
          type: string
        name:
          type: string
        templated:
          type: boolean
